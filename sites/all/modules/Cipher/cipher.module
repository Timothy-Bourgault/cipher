<?php

function cipher_menu() {
    $items['cipher'] = array(
        'title' => 'Sensei Cyber Cipher',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('cipher_form'),
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
    $items['cipher_result'] = array(
        'title' => 'Your Ciphered Phrase:',
        'page callback' => 'cipher_result',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    return $items;
}

function cipher_form() {
    $form['phrase'] = array(
        '#title' => 'Input Phrase:',
        '#type' => 'textfield',
        '#description' => t('Enter a phrase you wish to cipher and encrypt'),
        '#element_validate' => array('input_phrase_validate'),
        '#required' => TRUE,
    );
    $form['shift_value'] = array(
        '#title' => 'Shift Value:',
        '#type' => 'textfield',
        '#description' => t('Enter a number between 1 and 25 that you would like to shift/cipher encrypt each letter in your phrase'),
        '#element_validate' => array('element_validate_number', 'element_validate_integer_positive', 'element_validate_range'),
        '#required' => TRUE,
    );
    $form['direction'] = array(
        '#title' => 'Direction of Shift:',
        '#type' => 'textfield',
        '#description' => t('Enter either "right" or "left" to tell the cipher which way to encrypt your phrase'),
        '#element_validate' => array('element_validate_direction'),
        '#required' => TRUE,
    );
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Cipher Dat Shiz!',
    );
    return $form;
}

function input_phrase_validate($element) {
    $input_phrase = $element['#value'];
    $valid_characters = preg_match_all('/[a-zA-Z ,.!?:;\'\"]/', $input_phrase);
    if ($valid_characters != strlen($input_phrase)) {
        form_error($element, t('Warning: You have used improper punctuation in your input phrase!'));
    }
}

function element_validate_direction($element) {
    if ($element['#value'] != 'left' && $element['#value'] != 'right') {
        form_error($element, t('Warning: You may only enter "left" or "right" for the direction shift input field!'));
    }
}

function element_validate_range($element) {
    if ($element['#value'] < 1 || $element['#value'] > 25) {
        form_error($element, t('Warning: You must enter a shift value number within the valid range specified!'));
    }
}

function cipher_form_submit($form, &$form_state) {
    $input_phrase = str_split(strtolower($form_state['values']['phrase']));
    $shift_value = intval($form_state['values']['shift_value']);
    $direction = strtolower($form_state['values']['direction']);
    $alphabet = array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z');
    $encrypted_phrase = array();
    foreach($input_phrase as $word) {
        $characters = str_split($word);
        $new_word = "";
        $mew_array = array();
        foreach($characters as $character){
            $place = array_search($character, $alphabet);
            if($direction === 'left'){
                $moved_place = $place - $shift_value;
                while ($moved_place < 0) {
                    $moved_place = 26 - abs($moved_place);
                }
            } elseif($direction === 'right'){
                $moved_place = $place + $shift_value;
                while ($new_place > 25) {
                    $moved_place = $moved_place - 26;
                }
            }
            if(preg_match("/[a-z]/", $character)){
                array_push
            }
        }
        }
    }

    $output_array = array();

}
